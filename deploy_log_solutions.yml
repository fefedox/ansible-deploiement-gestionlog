---
- name: Deploy a complete log management stack (central server)
  hosts: localhost
  become: yes
  vars:
    graylog_password_secret: "{{ lookup('password', '/dev/null length=96') }}"
    graylog_root_password_sha2: "{{ 'password' | password_hash('sha512') }}"
    elasticsearch_version: "7.x"
    IP_DU_SERVEUR_CENTRAL: "{{ ansible_default_ipv4.address }}"

  tasks:
    - name: Ensure prerequisites are installed
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - openjdk-11-jre
        - gnupg2
        - ca-certificates
        - curl

    - name: Add Fluentd GPG Key and Repository
      apt_key:
        url: https://packages.treasuredata.com/GPG-KEY-td-agent
        state: present

    - name: Add Fluentd repository
      apt_repository:
        repo: "deb https://packages.treasuredata.com/3/ubuntu/focal/ focal contrib"
        state: present

    - name: Ensure Rsyslog is installed and started
      apt:
        name: rsyslog
        state: present
      notify:
        - Restart Rsyslog

    - name: Configure Rsyslog to receive logs from other servers
      lineinfile:
        path: /etc/rsyslog.conf
        state: present
        line: "{{ item }}"
      with_items:
        - '$ModLoad imudp'
        - '$UDPServerRun 514'
        - '$ModLoad imtcp'
        - '$InputTCPServerRun 514'
      notify:
        - Restart Rsyslog

    - name: Ensure Logrotate is installed
      apt:
        name: logrotate
        state: present

    - name: Install Fluentd (td-agent)
      apt:
        name: td-agent
        state: present
      notify:
        - Restart Fluentd

    - name: Install Elasticsearch GPG Key
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Add Elasticsearch repository
      apt_repository:
        repo: "deb https://artifacts.elastic.co/packages/{{ elasticsearch_version }}/apt stable main"
        state: present
        filename: elasticsearch

    - name: Install Elasticsearch
      apt:
        name: elasticsearch
        state: present
      notify:
        - Restart Elasticsearch

    - name: Install Graylog repository
      apt_repository:
        repo: 'deb https://packages.graylog2.org/repo/packages/graylog/4.x/ubuntu/ stable main'
        state: present

    - name: Install Graylog
      apt:
        name: graylog-server
        state: present

    - name: Configure Graylog Server
      lineinfile:
        path: /etc/graylog/server/server.conf
        state: present
        line: "{{ item }}"
      with_items:
        - "password_secret = {{ graylog_password_secret }}"
        - "root_password_sha2 = {{ graylog_root_password_sha2 }}"
        - "http_bind_address = {{ IP_DU_SERVEUR_CENTRAL }}:9000"
      notify:
        - Restart Graylog

    - name: Install Kibana
      apt:
        name: kibana
        state: present
      notify:
        - Restart Kibana

    - name: Create Graylog UDP input
      uri:
        url: "http://{{ IP_DU_SERVEUR_CENTRAL }}:9000/api/system/inputs"
        method: POST
        user: admin
        password: "{{ graylog_password }}"
        force_basic_auth: yes
        body: |
          {
            "title": "Syslog UDP",
            "global": true,
            "type": "org.graylog2.inputs.syslog.udp.SyslogUDPInput",
            "configuration": {
              "allow_override_date": true,
              "bind_address": "0.0.0.0",
              "port": 514,
              "recv_buffer_size": 262144,
              "override_source": null
            }
          }
        body_format: json
        headers:
          Content-Type: "application/json"
        status_code: 201
      register: output
      until: output.status == 201
      retries: 5
      delay: 15

  handlers:
    - name: Restart Rsyslog
      systemd:
        name: rsyslog
        state: restarted

    - name: Restart Fluentd
      systemd:
        name: td-agent
        state: restarted

    - name: Restart Elasticsearch
      systemd:
        name: elasticsearch
        state: restarted

    - name: Restart Graylog
      systemd:
        name: graylog-server
        state: restarted

    - name: Restart Kibana
      systemd:
        name: kibana
        state: restarted
